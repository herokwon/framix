name: Setup Slack Payload
description: Create a payload for Slack notification

inputs:
  slack_channel_id:
    description: Slack channel ID
    required: true
  published:
    description: A boolean value to indicate whether a publishing is happened or not
    required: true
  published_packages:
    description: 'A JSON array to present the published packages. The format is `[{"name": "@xx/xx", "version": "1.2.0"}, {"name": "@xx/xy", "version": "0.8.9"}]`'
    required: true
  pr_commit:
    description: Commit hash
    required: true
  pr_number:
    description: Pull request number
    required: true
  pr_title:
    description: Pull request title
    required: true
  pr_url:
    description: Pull request URL
    required: true
  avatar_url:
    description: GitHub avatar URL
    required: true

outputs:
  file-path:
    description: The path to the payload file
    value: ${{ steps.payload.outputs.file-path }}

runs:
  using: 'composite'
  steps:
    - name: Setup payload
      id: payload
      shell: bash
      env:
        SLACK_CHANNEL_ID: ${{ inputs.slack_channel_id }}
        PUBLISHED: ${{ inputs.published }}
        PUBLISHED_PACKAGES: ${{ inputs.published_packages }}
        PR_COMMIT: ${{ inputs.pr_commit }}
        PR_NUMBER: ${{ inputs.pr_number }}
        PR_TITLE: ${{ inputs.pr_title }}
        PR_URL: ${{ inputs.pr_url }}
        AVATAR_URL: ${{ inputs.avatar_url }}
        GH_REPO: ${{ github.repository }}
        GH_RUN_ID: ${{ github.run_id }}
        GH_OWNER: ${{ github.repository_owner }}
      run: |
        set -euo pipefail

        node - <<'NODE'
        const fs = require('fs');

        const env = process.env;
        const esc = (s) => String(s ?? '')
          .replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');

        const published = (env.PUBLISHED || '').toLowerCase() === 'true';

        let pkgs = [];
        try { pkgs = JSON.parse(env.PUBLISHED_PACKAGES || '[]'); } catch {}
        const pkg = pkgs[0] || {};
        const hasPkg = pkg.name && pkg.version;
        const npmUrl = hasPkg ? `https://npmjs.com/package/${pkg.name}/v/${pkg.version}` : '';

        const headerBlocks = published
          ? [{ type: "header", text: { type: "plain_text", text: "‚úÖ Ìå®ÌÇ§ÏßÄ Î∞∞Ìè¨ ÏôÑÎ£å", emoji: true } }]
          : [{ type: "header", text: { type: "plain_text", text: "‚ùå Ìå®ÌÇ§ÏßÄ Î∞∞Ìè¨ Ïã§Ìå®", emoji: true } }];

        const packageBlock = hasPkg ? [{
          type: "section",
          text: { type: "mrkdwn", text: `*\`${esc(pkg.name)}\`* : <${npmUrl}|*${esc(pkg.version)}*>` }
        }] : [];

        const baseBlocks = [
          { type: "divider" },
          { type: "section", text: { type: "mrkdwn", text: `*Commit*\n<https://github.com/${env.GH_REPO}/commit/${env.PR_COMMIT}|${esc(env.PR_COMMIT)}>` } },
          { type: "section", text: { type: "mrkdwn", text: `*Pull request*\n<${env.PR_URL}|[#${esc(env.PR_NUMBER)}] ${esc(env.PR_TITLE)}>` } },
          {
            type: "actions",
            elements: [
              { type: "button", text: { type: "plain_text", text: "‚≠ê\t Workflow details", emoji: true }, url: `https://github.com/${env.GH_REPO}/actions/runs/${env.GH_RUN_ID}` },
              { type: "button", text: { type: "plain_text", text: "üìÑ\t Pull request", emoji: true }, url: env.PR_URL }
            ]
          },
          { type: "divider" },
          {
            type: "context",
            elements: [
              { type: "image", image_url: env.AVATAR_URL, alt_text: "avatar_img" },
              { type: "mrkdwn", text: `<https://github.com/${env.GH_OWNER}|*${env.GH_OWNER}*> has approved this message.` }
            ]
          }
        ];

        const payload = {
          channel: env.SLACK_CHANNEL_ID,
          attachments: [
            {
              color: published ? "#36a64f" : "#ff4d4d",
              blocks: [...headerBlocks, ...packageBlock, ...baseBlocks]
            }
          ]
        };

        fs.writeFileSync('slack_payload.json', JSON.stringify(payload));
        NODE

        echo "file-path=slack_payload.json" >> "$GITHUB_OUTPUT"
