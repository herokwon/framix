name: Release

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-storybook:
    name: Deploy Storybook
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Run build
        run: pnpm build

      - name: Run chromatic
        id: chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - name: Comment on pull request
        uses: actions/github-script@v7
        with:
          script: |
            const result = (await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data;

            if (result.length === 0) throw new Error('No pull request found for the latest commit.');
            const issueNumber = result[0].number;

            github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':rocket: storybook: ${{ steps.chromatic.outputs.storybookUrl }}'
            });

  run-changesets:
    name: Run changesets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      published_packages: ${{ steps.changesets.outputs.publishedPackages }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Create .npmrc
        run: |
          cat <<-EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create release pull request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: 'chore: Update versions'
          commit: 'chore: Update versions'
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  send-slack-message:
    name: Send slack message
    runs-on: ubuntu-latest
    needs: run-changesets
    if: needs.run-changesets.outputs.published == 'true' || failure()
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check a latest pull request
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const result = (await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data;

            if (result.length === 0) throw new Error('No pull request found for the latest commit.');
            const latestPr = result[0];

            return {
              commit: latestPr.merge_commit_sha.substring(0, 7),
              number: latestPr.number,
              title: latestPr.title,
              url: latestPr.html_url,
              avatar_url: context.payload.repository.owner.avatar_url
            };

      - name: Setup slack payload
        uses: ./.github/actions/setup-slack-payload
        id: payload
        with:
          slack_channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          published: ${{ needs.run-changesets.outputs.published }}
          published_packages: ${{ needs.run-changesets.outputs.published_packages }}
          pr_commit: ${{ fromJSON(steps.pr.outputs.result).commit }}
          pr_number: ${{ fromJSON(steps.pr.outputs.result).number }}
          pr_title: ${{ fromJSON(steps.pr.outputs.result).title }}
          pr_url: ${{ fromJSON(steps.pr.outputs.result).url }}
          avatar_url: ${{ fromJSON(steps.pr.outputs.result).avatar_url }}

      - name: Send slack message
        uses: slackapi/slack-github-action@v2
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload-file-path: ${{ steps.payload.outputs.file-path }}
